/* STYLES FOR ABOVE THE FOLD */

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #hero-1619 {
    padding: var(--sectionPadding);
    /* 200px - 300px - leaving extra space for the navigation */
    padding-top: clamp(12.5rem, 31.95vw, 18.75rem);
    position: relative;
    z-index: 1;

    .cs-container {
      width: 100%;
      max-width: (1280/16rem);
      margin: auto;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      /* 60px - 180px */
      gap: clamp(3.75rem, 13vw, 11.25rem);
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: left;
      width: 100%;
      max-width: (780/16rem);
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: flex-start;
    }

    .cs-topper {
      /* 13px - 16px */
      font-size: clamp(0.8125rem, 1.5vw, 1rem);
      line-height: 1.2em;
      font-weight: 700;
      letter-spacing: 0.1em;
      text-align: center;
      text-transform: uppercase;
      margin-bottom: (4/16rem);
      color: var(--primary);
      display: flex;
      justify-content: center;
      align-items: center;
      gap: (8/16rem);
      position: relative;
    }

    .cs-chevron {
      --chevronColor: var(--primary);

      width: (48/16rem);
      height: auto;
    }

    .cs-title {
      /* 39px - 61px */
      font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
      font-weight: 700;
      line-height: 1.2em;
      text-align: inherit;
      max-width: 100%;
      margin: 0 0 (40/16rem) 0;
      color: #fff;
      position: relative;
    }

    .cs-text {
      /* 16px - 20px */
      font-size: clamp(1rem, 1.95vw, 1.25rem);
      line-height: 1.5em;
      text-align: inherit;
      width: 100%;
      /* 464px - 622px */
      max-width: clamp(29rem, 60vw, 38.785rem);
      margin: 0 0 (40/16rem) 0;
      color: #fff;
    }

    .cs-button-solid {
      font-size: (16/16rem);
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-decoration: none;
      font-weight: 700;
      margin: 0;
      color: #fff;
      padding: 0 (24/16rem);
      background-color: var(--primary);
      display: inline-block;
      position: relative;
      z-index: 1;

      &:before {
        content: "";
        position: absolute;
        display: block;
        height: 100%;
        width: 0%;
        background: #000;
        opacity: 1;
        top: 0;
        left: 0;
        z-index: -1;
        transition: width 0.3s;
      }

      &:hover {
        &:before {
          width: 100%;
        }
      }
    }

    .cs-card-group {
      margin: 0;
      padding: 0;
      width: 100%;
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      /* 16px - 20px */
      gap: clamp(1rem, 2.3vw, 1.25rem);
    }

    .cs-item {
      width: 100%;
      text-align: left;
      list-style: none;
      margin: 0;
      /* 24px - 32px */
      padding: clamp(1.5rem, 3vw, 2rem);
      background-color: #fff;
      box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      grid-column: span 12;
      grid-row: span 1;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
      position: relative;
      z-index: 1;
    }
    .cs-icon {
      width: (48/16rem);
      height: auto;
      margin: 0 0 (24/16rem) 0;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
      line-height: 1.2em;
      font-weight: bold;
      text-align: inherit;
      margin: 0 0 (16/16rem) 0;
      color: var(--headerColor);
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      max-width: (450/16rem);
      margin: 0;
      padding: 0;
      color: var(--bodyTextColor);
    }

    .cs-background {
      width: 100%;
      height: 55%;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -2;

      &:before {
        /* Overlay */
        content: "";
        width: 100%;
        height: 100%;
        background: #111926;
        opacity: 0.8;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        z-index: 1;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
      }

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        object-fit: cover;
        /* makes the top of the image start at the top of the parent */
        object-position: top;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #hero-1619 {
    padding-bottom: 0;
    .cs-container {
      align-items: flex-start;
    }

    .cs-content {
      text-align: left;
      margin-left: 0;
      align-items: flex-start;
    }

    .cs-item {
      grid-column: span 6;
    }

    .cs-background {
      height: 87%;
      &:before {
        background: linear-gradient(
          90deg,
          #111926 21.41%,
          rgba(17, 25, 38, 0.72) 34.98%,
          rgba(17, 25, 38, 0) 62.53%
        );
        opacity: 1;
      }
    }
  }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
  #hero-1619 {
    .cs-item {
      grid-column: span 3;
    }
  }
}

/* Large Desktop Parallax Effect - 100px */
@media only screen and (min-width: 100rem) {
  #hero-1619 {
    z-index: 1;
    position: relative;
    /* prevents overflow from the lines extending past the screen width */
    overflow: hidden;
    /* changes on tablet */
    padding: 0 (16/16rem);
    padding-bottom: (100/16rem);
    font-family: "Roboto", "Arial", sans-serif;
    /* Centers button */
    text-align: center;

    .cs-picture {
      z-index: -2;
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      height: 100%;
      /* Background Image */
      width: 100%;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        /* Makes image act like a background-image */
        object-fit: cover;
      }

      &:before {
        z-index: 1;
        position: absolute;
        top: 0;
        left: 0;
        /* Black Color Overlay */
        content: "";
        opacity: 0.7;
        display: block;
        background: #000;
        height: 100%;
        width: 100%;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
      }
    }
  }

  /* Dark Mode */
  @media only screen and (min-width: 0rem) {
    body.dark-mode {
      #hero-1619 {
        .cs-item {
          background-color: var(--medium);
        }

        .cs-h3,
        .cs-item-text {
          color: var(--bodyTextColorWhite);
        }

        .cs-icon {
          filter: grayscale(1) brightness(1000%);
        }

        .cs-text {
          opacity: 0.8;
        }

        .cs-background {
          background-color: #000;

          img {
            opacity: 0.5;
          }
        }
      }
    }
  }

  /*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #services-1354 {
      padding: var(--sectionPadding);
      position: relative;
      z-index: 10;

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: clamp(3rem, 6vw, 4rem);
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
      }

      .cs-topper {
        color: #767676;
      }

      .cs-title {
        max-width: 25ch;
        margin: 0;
      }

      .cs-card-group {
        margin: 0;
        padding: 0;
        width: 100%;
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        /* 16px - 20px */
        gap: clamp(1rem, 2vw, 1.25rem);
      }

      .cs-item {
        text-align: center;
        list-style: none;
        width: 100%;
        height: (305/16rem);
        margin: 0;
        padding: 0;
        background-color: #000;
        border-radius: (24/16rem);
        /* clips background image corners */
        overflow: hidden;
        box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        grid-column: span 12;
        grid-row: span 1;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-end;
        position: relative;
        z-index: 1;

        &:hover {
          .cs-background {
            &:before {
              background-color: var(--primary);
              opacity: 0.84;
            }

            img {
              transform: scale(1.2);
            }
          }
        }
      }

      .cs-link {
        text-decoration: none;
        width: 100%;
        height: 100%;
        /* padding goes on the link, not the cs-item as is normal. We do this because we want the whole card to be hoverable. So we add the padding to the link tag to create the space inside the card. By adding the space inside the cs-link tag we can make the whole card hoverable since the padding is now contributing to the height and widht of the link */
        padding: (24/16rem);
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .cs-h3 {
        font-size: (25/16rem);
        line-height: 1.2em;
        font-weight: bold;
        text-align: inherit;
        margin: 0;
        color: var(--bodyTextColorWhite);
        transition: color 0.3s;
      }

      .cs-span {
        /* forces the h3 to alwasy be two lines */
        display: block;
      }

      .cs-background {
        width: 100%;
        height: 100%;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;

        &:before {
          /* background color overlay */
          content: "";
          position: absolute;
          display: block;
          height: 100%;
          width: 100%;
          background-color: #000;
          opacity: 0.4;
          top: 0;
          left: 0;
          z-index: 1;
          transition: background-color 0.3s, opacity 0.3s;
        }

        img {
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          /* Makes img tag act as a background image */
          object-fit: cover;
          transition: transform 0.6s;
        }
      }
    }
  }

  /* Tablet - 600px */
  @media only screen and (min-width: 37.5rem) {
    #services-1354 {
      .cs-item {
        grid-column: span 6;
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #services-1354 {
      .cs-content {
        text-align: left;
        align-items: flex-start;
      }

      .cs-item {
        grid-column: span 3;
      }
    }
  }

  /* Dark Mode */
  @media only screen and (min-width: 0rem) {
    body.dark-mode {
      #services-1354 {
        .cs-topper {
          color: var(--primary);
        }

        .cs-title {
          color: var(--bodyTextColorWhite);
        }
      }
    }
  }
}
